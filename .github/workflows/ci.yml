name: Build, Push and Deploy Movie-app to AKS
on:
  push:
    branches:
      - mybranch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t kollexy/movie-api:latest ./app

      - name: Push Docker image to Docker Hub
        run: docker push kollexy/movie-api:latest

  terraform-deploy-infra:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init 
        run: cd aks && terraform init
        # env:
        #   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        #   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        #   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        #   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Plan
        run: cd aks && terraform plan
        # env:
        #   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        #   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        #   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        #   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: cd aks && terraform apply -auto-approve
        # env:
        #   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        #   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        #   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        #   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  deploy-to-aks:
    runs-on: ubuntu-latest 
    needs:   terraform-deploy-infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      


      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          # trunk-ignore(yamllint/quoted-strings)
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.RESOURCE_GROUP }}
          cluster-name: ${{ vars.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Create AKS Secret
        run:
          kubectl create secret docker-registry dockerhub-secret --docker-username=${{ secrets.DOCKER_USERNAME }} --docker-password=${{ secrets.DOCKER_PASSWORD }} --docker-email=${{ secrets.DOCKER_EMAIL }} --docker-server=https://index.docker.io/v1/


      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ vars.DEPLOYMENT_MANIFEST_PATH }}
          images: ${{ vars.DOCKER_IMAGE }}
